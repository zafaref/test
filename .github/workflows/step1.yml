# This is a basic workflow to help you get started with Actions

name: stepone

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  randomfirst:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # or any version you need
      
      - name: Printing variables
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF_TYPE: $GITHUB_REF_TYPE"
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "GITHUB_RUN_ID: $GITHUB_RUN_ID"
          echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER"
          echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW"
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"
          echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "GITHUB_TRIGGERING_ACTOR: $GITHUB_TRIGGERING_ACTOR"
          echo "GITHUB_REPOSITORY_OWNER: $GITHUB_REPOSITORY_OWNER"
          echo "GITHUB_REPOSITORY_ID: $GITHUB_REPOSITORY_ID"
          echo "GITHUB_PATH: $GITHUB_PATH"
          echo "GITHUB_JOB: $GITHUB_JOB"
          echo "GITHUB_ACTION_REPOSITORY: $GITHUB_ACTION_REPOSITORY"

#      - name: Cache pip
#        uses: actions/cache@v4
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ hashFiles('libs/requirements.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-pip-

#      - name: Install dependencies
#        run: pip install -r libs/requirements.txt

      - name: Python dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y freetds-dev libkrb5-dev libssl-dev libgssapi-krb5-2
          # pip install --no-build-isolation --no-cache-dir "setuptools<72"
          pip install -U test_dbt_conflicts/default.runner/prefect-ef

          
      - name: Get installed packagesdf
        run: pip freeze

      - name: Run your script or tests
        run: python core/test.py

